generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
  binaryTargets   = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum Status {
  ACTIVE
  INACTIVE
}

model User {
  id         Int       @id @default(autoincrement())
  name       String    @map("name")
  avatar     String    @default("ic_avatar_default") @map("avatar")
  email      String    @unique @map("email")
  role       Role      @default(USER) @map("role")
  status     Status    @default(ACTIVE) @map("status")
  isVerified Boolean   @default(true) @map("is_verified")
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @updatedAt @map("updated_at")
  deletedAt  DateTime? @map("deleted_at")

  accounts     Account[]
  categories   Category[]
  transactions Transaction[]
  Media        Media[]

  @@map("users")
}

model Otp {
  id         Int      @id @default(autoincrement())
  code       Int      @map("code")
  email      String   @unique @map("email")
  isVerified Boolean  @default(false) @map("is_verified")
  expiresAt  DateTime @map("expires_at")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  @@map("otps")
}

enum MediaType {
  IMAGE
}

enum ModelType {
  CATEGORY
  TRANSACTION
}

enum MediaCollection {
  CATEGORY
  TRANSACTION
}

model Media {
  id                 Int                  @id @default(autoincrement())
  userId             Int                  @map("user_id")
  modelId            Int?                 @map("model_id")
  modelType          ModelType?           @map("model_type")
  name               String               @map("name")
  key                String               @map("key")
  path               String               @map("path")
  mime               String               @map("mime")
  type               MediaType            @map("type")
  size               Int                  @map("size")
  collection         MediaCollection      @map("collection")
  createdAt          DateTime             @default(now()) @map("created_at")
  updatedAt          DateTime             @updatedAt @map("updated_at")
  deletedAt          DateTime?            @map("deleted_at")
  user               User                 @relation(fields: [userId], references: [id])
  Category           Category[]
  Transaction        Transaction[]
  CustomCategoryIcon CustomCategoryIcon[]

  @@map("media")
}

enum TxType {
  CREDIT
  DEBIT
}

model Transaction {
  id           Int       @id @default(autoincrement())
  userId       Int       @map("user_id")
  accountId    Int       @map("account_id")
  categoryId   Int       @map("category_id")
  attachmentId Int?      @map("attachment_id")
  amount       Decimal   @map("amount")
  note         String    @map("note")
  type         TxType    @map("type")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")
  deletedAt    DateTime? @map("deleted_at")

  attachment Media?    @relation(fields: [attachmentId], references: [id])
  user       User?     @relation(fields: [userId], references: [id])
  account    Account?  @relation(fields: [accountId], references: [id])
  category   Category? @relation(fields: [categoryId], references: [id])

  @@map("transactions")
}

model Category {
  id        Int       @id @default(autoincrement())
  userId    Int?      @map("user_id")
  iconId    Int?      @map("icon_id")
  name      String    @map("name")
  slug      String    @map("slug")
  type      TxType?   @map("type")
  isActive  Boolean   @default(true) @map("is_active")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  user        User?         @relation(fields: [userId], references: [id])
  icon        Media?        @relation(fields: [iconId], references: [id])
  Transaction Transaction[]

  @@map("categories")
}

enum AcType {
  BANK
  WALLET
}

model Account {
  id        Int       @id @default(autoincrement())
  userId    Int       @map("user_id")
  name      String    @map("name")
  type      AcType    @map("type")
  slug      String    @unique @map("slug")
  icon      String?   @map("icon")
  balance   Decimal   @map("balance")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  user        User          @relation(fields: [userId], references: [id])
  Transaction Transaction[]

  @@map("accounts")
}

model CustomCategoryIcon {
  id        Int      @id @default(autoincrement())
  iconId    Int      @map("icon_id")
  createdAt DateTime @default(now()) @map("created_at")
  icon      Media?   @relation(fields: [iconId], references: [id])

  @@map("custom_category_icons")
}
